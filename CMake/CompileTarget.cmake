function(search_files)
set(TARGET_SOURCES_DIR "Private")
set(TARGET_HEADERS_DIR "Public")

file(GLOB_RECURSE TARGET_SOURCES
    "${TARGET_SOURCES_DIR}/*.cpp")

file(GLOB_RECURSE TARGET_HEADERS
    "${TARGET_HEADERS_DIR}/*.h" "${TARGET_SOURCES_DIR}/*.h")

list(FILTER TARGET_SOURCES EXCLUDE REGEX ".*Platforms.*")
list(FILTER TARGET_HEADERS EXCLUDE REGEX ".*Platforms.*")

if(APPLE)
    set(PLATFORM_DIR_NAME "Mac")
elseif(WIN32)
    set(PLATFORM_DIR_NAME "Windows")
else()
    message(FATAL_ERROR "Unsupported platform")
endif()

set(PLATFORM_SOURCES_DIR 
    "${TARGET_SOURCES_DIR}/Platforms/${PLATFORM_DIR_NAME}")
set(PLATFORM_HEADERS_DIR 
    "${TARGET_SOURCES_DIR}/Platforms/${PLATFORM_DIR_NAME}")

file(GLOB_RECURSE PLATFORM_SOURCES
    "${PLATFORM_SOURCES_DIR}/*.cpp" "${PLATFORM_SOURCES_DIR}/*.mm")
file(GLOB_RECURSE PLATFORM_HEADERS
    "${PLATFORM_HEADERS_DIR}/*.h" "${PLATFORM_SOURCES_DIR}/*.h")

list(APPEND TARGET_SOURCES ${PLATFORM_SOURCES})
list(APPEND TARGET_HEADERS ${PLATFORM_HEADERS})

set(found_headers ${TARGET_HEADERS} PARENT_SCOPE)
set(found_sources ${TARGET_SOURCES} PARENT_SCOPE)
set(found_header_dirs ${TARGET_HEADERS_DIR} PARENT_SCOPE)
set(found_source_dirs ${TARGET_SOURCES_DIR} PARENT_SCOPE)
endfunction()
